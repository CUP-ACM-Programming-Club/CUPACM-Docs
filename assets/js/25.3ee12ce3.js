(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{231:function(e,t,_){"use strict";_.r(t);var v=_(17),a=Object(v.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[_("strong",[e._v("CUP Online Judge")]),e._v("是一个以Vue.js作为前端框架，ExpressJS 作为后端框架开发的在线评测系统。")]),e._v(" "),_("p",[_("em",[e._v("注: CUP Virtual Judge属于较为独立的、技术栈未成熟的另外一个程序，因此在本程序中不会涉及到与Virtual Judge系统相关的接口开发问题。")])]),e._v(" "),_("p",[_("strong",[e._v("CUP Virtual Judge由于国内各大OJ调整对海外IP地址访问的策略，现在暂时停止提交功能，保留题目内容供查询。")])]),e._v(" "),_("h2",{attrs:{id:"云化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#云化"}},[e._v("#")]),e._v(" 云化")]),e._v(" "),_("h3",{attrs:{id:"datasource"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#datasource"}},[e._v("#")]),e._v(" Datasource")]),e._v(" "),_("ul",[_("li",[e._v("MySQL 使用阿里云RDS MySQL服务器")])]),e._v(" "),_("h3",{attrs:{id:"middleware"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#middleware"}},[e._v("#")]),e._v(" Middleware")]),e._v(" "),_("ul",[_("li",[e._v("判题机注册节点 "),_("strong",[e._v("待开发")])])]),e._v(" "),_("h3",{attrs:{id:"core"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#core"}},[e._v("#")]),e._v(" Core")]),e._v(" "),_("ul",[_("li",[e._v("前端 已完成")]),e._v(" "),_("li",[e._v("后端 已完成")]),e._v(" "),_("li",[e._v("判题机 待开发")])]),e._v(" "),_("h2",{attrs:{id:"线上已知问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#线上已知问题"}},[e._v("#")]),e._v(" 线上已知问题")]),e._v(" "),_("p",[e._v("迁移至"),_("a",{attrs:{href:"/discuss/thread/17"}},[e._v("CUP Online Judge系统问题整理复盘")]),e._v(" "),_("s",[e._v("* WebSocket进程有CPU hang100%的现象")]),e._v(" "),_("s",[e._v("解决方案:排查中")])]),e._v(" "),_("p",[_("s",[e._v("* 提交事件响应抖动造成冗余提交")]),e._v(" "),_("s",[e._v("解决方案: 前端去颤加锁，后端加计时器")])]),e._v(" "),_("p",[_("s",[e._v("* \b发布有较大不确定性，有不可预估的风险")]),e._v(" "),_("s",[e._v("解决方案: 新增部署dev环境->ppe环境->prod环境发布链，新发布统一走SOP变更。")])]),e._v(" "),_("h2",{attrs:{id:"typescript改造"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#typescript改造"}},[e._v("#")]),e._v(" TypeScript改造")]),e._v(" "),_("blockquote",[_("p",[e._v("动态一时爽，重构火葬场")])]),e._v(" "),_("p",[e._v("为了杜绝以上情况的出现，现计划通过改造当前后端，使用TypeScript语言重构。")]),e._v(" "),_("p",[_("strong",[e._v("注: 使用TypeScript请务必抽象化规范化各种DO,减少不必要的"),_("code",[e._v("any")]),e._v("声明")])]),e._v(" "),_("p",[e._v("如果你也对重构计划感兴趣，欢迎访问")]),e._v(" "),_("ul",[_("li",[e._v("(后端)"),_("a",{attrs:{href:"https://github.com/CUP-ACM-Programming-Club/CUP-Online-Judge-Express/tree/typescript",target:"_blank",rel:"noopener noreferrer"}},[e._v("CUP-Online-Judge-Express:typescript"),_("OutboundLink")],1)]),e._v(" "),_("li",[e._v("(前端)"),_("a",{attrs:{href:"https://github.com/ryanlee2014/CUP-Online-Judge-NG-FrontEnd",target:"_blank",rel:"noopener noreferrer"}},[e._v("CUP-Online-Judge-NG-FrontEnd"),_("OutboundLink")],1)])]),e._v(" "),_("p",[e._v("为我们贡献代码")]),e._v(" "),_("h2",{attrs:{id:"集群化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#集群化"}},[e._v("#")]),e._v(" 集群化")]),e._v(" "),_("p",[e._v("目前后端功能逐渐丰富，接口的数量也逐渐增加，带来的性能开销也越来越大。在高并发及高任务提交的环境下，数据库查询队列负载过重，同时CPU占用率高导致判题效率严重下降，造成较为严重的后果。")]),e._v(" "),_("p",[e._v("在当天晚上通过使用Apache Bench对后端接口进行压测过程发现，服务器多个接口均存在不能耐受突发高并发请求的情况。包括但不限于：")]),e._v(" "),_("ul",[_("li",[e._v("问题历史页面接口: "),_("code",[e._v("problemstatus")]),e._v(" (响应时间: 4s)")]),e._v(" "),_("li",[e._v("问题集接口： "),_("code",[e._v("problemset")]),e._v(" (响应时间:1s)")]),e._v(" "),_("li",[e._v("竞赛列表接口： "),_("code",[e._v("contest")]),e._v(" (响应时间: 800ms)")]),e._v(" "),_("li",[e._v("...")])]),e._v(" "),_("p",[e._v("原缓存模型为：\n"),_("mermaid",[e._v("\ngraph LR;\n路由中间件--SQL查询--\x3eMySQL缓存层;\nMySQL缓存层--SQL查询--\x3eMySQL数据库;\nMySQL数据库-.结果.->MySQL缓存层;\nMySQL缓存层--缓存查询--\x3e缓存;\nMySQL缓存层--缓存更新--\x3e缓存;\n缓存-.返回缓存 or null.->MySQL缓存层;\nMySQL缓存层-.返回结果.->路由中间件;\n")]),e._v("\n以上接口在面临高并发请求任务时，由于服务器本身缓存部分为MySQL任务结果，并没有对接口本身做缓存优化，因此存在以下缓存穿透的可能。")],1),e._v(" "),_("p",[e._v("在高并发环境下，对于SQL查询语句存在重复的情况，而部分慢查询不能及时将数据存到缓存层中，造成缓存穿透，所有请求直接打到数据库，造成后端服务器掉底。")]),e._v(" "),_("p",[e._v("针对这种情况，可以考虑使用加锁进行优化。对于每个查询，先获得锁，然后进行查询缓存任务，完成后释放锁，保证后续任务能够直接命中缓存。")]),e._v(" "),_("mermaid",[e._v("\ngraph LR;\n    路由中间件--SQL查询--\x3eMySQL缓存层;\n    MySQL缓存层--SQL查询--\x3eMySQL数据库;\nMySQL缓存层--加锁/解锁--\x3eMySQL缓存层\n    MySQL数据库-.结果.->MySQL缓存层;\n    MySQL缓存层--缓存查询--\x3e缓存;\n    MySQL缓存层--缓存更新--\x3e缓存;\n    缓存-.返回缓存 or null.->MySQL缓存层;\n    MySQL缓存层-.返回结果.->路由中间件;\n")]),e._v(" "),_("p",[e._v("以上模型能够解决慢查询击穿数据库的问题。但是如果并发量较大，初始未加缓存的情况下仅能有一个查询在同时进行，性能还没有达到最优。这时候我们可以考虑维护锁管理器，对于每个查询按照指定的规则生成锁的键值，对于每类查询，保证只会命中特定的锁，而不影响其他无关查询的性能。")]),e._v(" "),_("mermaid",[e._v("\ngraph LR;\n    路由中间件--SQL查询--\x3eMySQL缓存层;\n    MySQL缓存层--SQL查询--\x3eMySQL数据库;\nMySQL缓存层--加锁/解锁--\x3e锁管理器;\n    MySQL数据库-.结果.->MySQL缓存层;\n    MySQL缓存层--缓存查询--\x3e缓存;\n    MySQL缓存层--缓存更新--\x3e缓存;\n    缓存-.返回缓存 or null.->MySQL缓存层;\n    MySQL缓存层-.返回结果.->路由中间件;\n")]),e._v(">\n"),_("p",[e._v("通过以上几步优化，我们成功将原本并发量为1"),_("s",[e._v("也就是完全没有并发的杂鱼")]),e._v("提升为500rps上下。")]),e._v(" "),_("p",[e._v("但是500rps并不能让我们停止对性能提升的追求。通过使用"),_("code",[e._v("top")]),e._v("工具观察压测过程中的资源使用情况，我们发现对于单进程，"),_("code",[e._v("node")]),e._v("已经跑满单核CPU的所有计算资源。我们知道，"),_("code",[e._v("Node.js")]),e._v("使用单线程维护事件队列保证异步高并发的运行环境。而我们显然需要发挥一台计算机多核的威力，不能仅实现一核有难，多核围观这一情况。")]),e._v(" "),_("h3",{attrs:{id:"cluster"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cluster"}},[e._v("#")]),e._v(" Cluster")]),e._v(" "),_("p",[e._v("Node.js在官方库中提供了"),_("code",[e._v("Cluster")]),e._v("这一模块，使得Node应用能够以集群的形式运行在服务器上。")]),e._v(" "),_("p",[e._v("我们可以通过启动一个"),_("code",[e._v("Master")]),e._v("进程，fork与CPU数量相当的"),_("code",[e._v("Worker")]),e._v("进程，由"),_("code",[e._v("Master")]),e._v("进程获得TCP连接，使用RoundRobin算法平均分配给各个进程，实现负载均衡。\n"),_("mermaid",[e._v("\ngraph TD;\nTCP--\x3eA;\nA[Master进程]--\x3eB[Worker 1];\nA[Master进程]--\x3eC[Worker 2];\nA[Master进程]--\x3eD[Worker 3];\nA[Master进程]--\x3eE[Worker 4];\nA[Master进程]--\x3eF[Worker 5];\nA[Master进程]--\x3eG[Worker 6];\nA[Master进程]--\x3eH[Worker 7];\nA[Master进程]--\x3eI[Worker 8];\n")]),e._v("\n但是为什么我没有一开始就用这种模型开发呢？\n因为在我们系统中"),_("strong",[e._v("存在单例模式的组件，组件对变更事件敏感")]),e._v("。\n以下组件是要求严格单例模式且需要即时响应请求的:")],1),e._v(" "),_("ol",[_("li",[e._v("判题模块")]),e._v(" "),_("li",[e._v("ConfigManager")]),e._v(" "),_("li",[e._v("在线用户管理")]),e._v(" "),_("li",[e._v("WebSocket通信模块")])]),e._v(" "),_("p",[e._v("其中(1)(3)(4)模块的抽象保证耦合，(2)模块要求即时同步更新。")]),e._v(" "),_("p",[e._v("对于前面这种情况，我采用应用切分的方式实现功能的解耦合，将(1)(3)(4)作为一个新服务切分出来，在其他服务掉底的情况仍能保持判题功能。\n"),_("mermaid",[e._v("\ngraph TD;\nA[CUP Online Judge]--\x3eB[CUP Online Judge Express];\nA--\x3eC[CUP Online Judge WebSocket]\nB--\x3eHTTP\nHTTP-.->B\nC--\x3eWebSocket\nWebSocket-.->C\nHTTP--\x3eD[Client]\nWebSocket--\x3eD\n")])],1),e._v(" "),_("p",[e._v("后面这种情况，使用进程间通信保证一致性。\n"),_("mermaid",[e._v("\ngraph TD;\nU[Worker]--通知更新--\x3eA[Master]\nA--广播--\x3eB[Worker 2]\nA--广播--\x3eC[Worker 3]\nA--广播--\x3eD[Worker 4]\nA--广播--\x3eE[Worker 5]\n")])],1),e._v(" "),_("p",[e._v("然后经过一番优化以后，上述几个瓶颈接口达到了惊人的2300rps,更不用说剩下一些不涉及数据存取的部分，性能提升相当显著。")]),e._v(" "),_("h3",{attrs:{id:"热更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#热更新"}},[e._v("#")]),e._v(" 热更新")]),e._v(" "),_("p",[e._v("考虑推线上发布的时候会短暂影响用户的使用体验，而在改造集群以后可以通过负载均衡分配任务给不同的Worker进程。因此可以通过现有的模型改造热更新方案。")]),e._v(" "),_("p",[e._v("通过IPC通信通知Master进程重启，Master进程将Worker进程时间Promise化，实现平滑进程过渡，保证用户在无感知情况下实现更新。")]),e._v(" "),_("mermaid",[e._v("\ngraph LR;\nA[New Worker]--bootstrap--\x3eB[Worker Set]\nB--Destroy--\x3eC[Dead Worker]\n")]),e._v(" "),_("h2",{attrs:{id:"为什么选用node-js作为后端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么选用node-js作为后端"}},[e._v("#")]),e._v(" 为什么选用Node.js作为后端")]),e._v(" "),_("p",[e._v("Node.js有以下优点:")]),e._v(" "),_("ul",[_("li",[e._v("单线程\n"),_("ul",[_("li",[e._v("协程")])])]),e._v(" "),_("li",[e._v("高并发\n"),_("ul",[_("li",[e._v("I/O密集")])])]),e._v(" "),_("li",[e._v("事件队列\n"),_("ul",[_("li",[e._v("事件驱动型后端")])])]),e._v(" "),_("li",[_("s",[e._v("敏捷开发")]),e._v(" "),_("ul",[_("li",[_("s",[e._v("前端后端一把梭")])])])]),e._v(" "),_("li",[e._v("NPM")])]),e._v(" "),_("p",[e._v("缺点:")]),e._v(" "),_("ul",[_("li",[e._v("不适用于计算密集型应用")]),e._v(" "),_("li",[e._v("动态语言")])]),e._v(" "),_("blockquote",[_("p",[e._v("动态一时爽，重构火葬场\n(TypeScript重构希望"),_("s",[e._v("在做了 在做了")]),e._v(")")])]),e._v(" "),_("ul",[_("li",[e._v("不够完善的后端生态")])]),e._v(" "),_("p",[e._v("本文档使用GitHub作为版本控制工具，访问本文档旧版本内容请前往下列链接查看:\n"),_("a",{attrs:{href:"https://github.com/CUP-ACM-Programming-Club/CUP-Online-Judge-doc/blob/master/CUP-Online-Judge%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3.md",target:"_blank"}},[e._v("CUP-Online-Judge开发文档.md")])]),e._v(" "),_("p",[e._v("阅读本文档需要了解以下预备知识:")]),e._v(" "),_("ul",[_("li",[e._v("Node.js(v"),_("s",[e._v("10.0")]),e._v("12+)")]),e._v(" "),_("li",[e._v("JavaScript(ES"),_("s",[e._v("5")]),_("s",[e._v("6")]),_("s",[e._v("7")]),e._v("10)")]),e._v(" "),_("li",[e._v("TypeScript")]),e._v(" "),_("li",[e._v("PHP(v7.0+)("),_("strong",[e._v("Deprecated")]),e._v("*)")]),e._v(" "),_("li",[e._v("Linux")]),e._v(" "),_("li",[e._v("C++(17+)**")]),e._v(" "),_("li",[e._v("HTML(HTML5 is optional)")]),e._v(" "),_("li",[e._v("Vue.js 2+")]),e._v(" "),_("li",[e._v("CSS3")]),e._v(" "),_("li",[e._v("SQL")]),e._v(" "),_("li",[e._v("Redis")]),e._v(" "),_("li",[e._v("Apache httpd("),_("strong",[e._v("Deprecated")]),e._v(")")]),e._v(" "),_("li",[e._v("Nginx")])]),e._v(" "),_("p",[e._v("*: PHP即将在"),_("code",[e._v("去PHP")]),e._v("计划中被删除。\n**: ThreadPool使用了C++17语法特性(Lambda表达式)")]),e._v(" "),_("h2",{attrs:{id:"程序架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#程序架构"}},[e._v("#")]),e._v(" 程序架构")]),e._v(" "),_("p",[e._v("本程序参照了HUSTOJ与SYZOJ的架构，采用了MySQL + Node.js + Linux C/C++ "),_("s",[e._v("+ PHP")]),e._v("技术栈进行开发。")]),e._v(" "),_("p",[e._v("下列列出的本程序的项目已经开源。")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://github.com/CUP-ACM-Programming-Club/CUP-Online-Judge-Express",target:"_blank"}},[e._v("基于Node.js Express开发的后端")])]),e._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/CUP-ACM-Programming-Club/CUP-Online-Judge-Judger",target:"_blank"}},[e._v("基于简易沙箱的判题机")])]),e._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/CUP-ACM-Programming-Club/CUP-Online-Judge-docker-judger",target:"_blank"}},[e._v("基于Docker的判题机")])]),e._v(" "),_("li",[_("s",[_("a",{attrs:{href:"https://github.com/CUP-ACM-Programming-Club/CUP_Online_Judge_Semantic_UI",target:"_blank"}},[e._v("基于Semantic UI构建的、使用Vue.js作为框架的前端")])]),_("a",{attrs:{href:"https://github.com/ryanlee2014/CUP-Online-Judge-NG-FrontEnd",target:"_blank"}},[e._v("基于Vue-Cli 3.0构建的Vue.js单页应用程序")])]),e._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/CUP-ACM-Programming-Club/CUP-Online-Judge-Problem-Packer",target:"_blank"}},[e._v("使用Electron Vue开发的跨平台题目打包管理器")])]),e._v(" "),_("li",[_("s",[_("a",{attrs:{href:"https://github.com/ryanlee2014/HUSTOJ-Flat-UI-Theme",target:"_blank"}},[e._v("基于Flat UI开发的PHP事务下的主题")])])])]),e._v(" "),_("p",[e._v("下列部分"),_("s",[e._v("暂未开源，或者")]),e._v("由于即将被替代/与其他开源项目的功能重复决定不做开源处理。")]),e._v(" "),_("ul",[_("li",[e._v("基于Medoo编写的旧版的PHP事务部分")]),e._v(" "),_("li",[e._v("基于Semantic UI与Bootstrap开发的主题")]),e._v(" "),_("li",[e._v("管理员管理后台")])]),e._v(" "),_("p",[e._v("关于本程序采用的开源软件，请访问"),_("a",{attrs:{href:"https://www.cupacm.com/opensource.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("开放源代码声明"),_("OutboundLink")],1),e._v("查看。")]),e._v(" "),_("h2",{attrs:{id:"写在开发前"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写在开发前"}},[e._v("#")]),e._v(" 写在开发前")]),e._v(" "),_("p",[e._v("为了更好的方便内部模块间的协同工作，请认真理解本程序的工作流程，即使它非常的混乱、冗余。")]),e._v(" "),_("p",[e._v("在为本程序进行开发时请时刻"),_("s",[e._v("牢记"),_("strong",[e._v("稳定")]),e._v("与"),_("strong",[e._v("必要")]),e._v("是该程序功能增改的一大原则")]),e._v("考虑以领域驱动设计(DDD)的角度对模组抽象化。")]),e._v(" "),_("p",[e._v("以下是本程序在用户登录后模块间通信的图示。\n"),_("img",{attrs:{src:"https://raw.githubusercontent.com/CUP-ACM-Programming-Club/CUP-Online-Judge-doc/master/pic/program_structure.png",alt:""}})]),e._v(" "),_("p",[e._v("可以分为以下部分。")]),e._v(" "),_("h3",{attrs:{id:"node-js-runtime基于node-js-express开发的后端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node-js-runtime基于node-js-express开发的后端"}},[e._v("#")]),e._v(" "),_("s",[e._v("Node.js Runtime")]),e._v("基于Node.js Express开发的后端")]),e._v(" "),_("p",[e._v("使用ExpressJS框架，主要功能：")]),e._v(" "),_("ul",[_("li",[e._v("使用Socket.IO与用户进行双向通信")]),e._v(" "),_("li",[e._v("CRUD("),_("strong",[e._v("Deprecated:考虑到Node.js对运算密集部分的不友好，这部分将考虑使用微服务进行拆分")]),e._v(")")]),e._v(" "),_("li",[e._v("维护判题队列")]),e._v(" "),_("li",[e._v("用户权限管理")]),e._v(" "),_("li",[e._v("题目文件部署")]),e._v(" "),_("li",[e._v("WebSocket转发")]),e._v(" "),_("li",[e._v("信息广播")])]),e._v(" "),_("h4",{attrs:{id:"程序文件夹"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#程序文件夹"}},[e._v("#")]),e._v(" 程序文件夹")]),e._v(" "),_("p",[e._v("- root\n--- static 静态文件文件夹(js库/css库)\n--- route 路由文件夹(API接口)\n--- manager 领域设计贫血模型\n--- orm 数据库对象关系映射模型(Sequelize.js)\n--- test 单元测试\n--- bin 启动文件夹(程序启动文件)\n--- module 模块文件夹(被其他文件调用)\n--- middleware 中间件文件夹(中间件)\n--- views 模版文件夹(pug文件模板)\n--- logs 日志文件夹(日志)")]),e._v(" "),_("h4",{attrs:{id:"程序启动-daemon"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#程序启动-daemon"}},[e._v("#")]),e._v(" 程序启动(Daemon)")]),e._v(" "),_("p",[_("code",[e._v("npm start")])]),e._v(" "),_("h4",{attrs:{id:"程序启动-debug"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#程序启动-debug"}},[e._v("#")]),e._v(" 程序启动(Debug)")]),e._v(" "),_("p",[_("code",[e._v("npm test")])]),e._v(" "),_("h4",{attrs:{id:"程序重启-daemon"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#程序重启-daemon"}},[e._v("#")]),e._v(" 程序重启(Daemon)")]),e._v(" "),_("p",[_("code",[e._v("npm restart")])]),e._v(" "),_("h3",{attrs:{id:"c-judger"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#c-judger"}},[e._v("#")]),e._v(" C++ Judger")]),e._v(" "),_("p",[e._v("使用EasyWebsocket、HUSTOJ Judger进行重构、开发\n主要功能:\n判题:")]),e._v(" "),_("h2",{attrs:{id:"一个提交的执行流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一个提交的执行流程"}},[e._v("#")]),e._v(" 一个提交的执行流程")]),e._v(" "),_("h3",{attrs:{id:"客户端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[e._v("#")]),e._v(" 客户端")]),e._v(" "),_("ol",[_("li",[e._v("用户点击"),_("code",[e._v("提交")]),e._v("按钮")]),e._v(" "),_("li",[e._v("代码、token被打包，委托Socket.IO模块推送到Node.js Runtime")]),e._v(" "),_("li",[e._v("Socket.IO模块接受"),_("code",[e._v("result")]),e._v("事件，调用挂在"),_("code",[e._v("window")]),e._v("上的"),_("code",[e._v("problemsubmitter")]),e._v("Vue实例，Vue实例执行相关操作，显示判题情况。")])]),e._v(" "),_("h3",{attrs:{id:"服务器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务器"}},[e._v("#")]),e._v(" 服务器")]),e._v(" "),_("h5",{attrs:{id:"node-js-runtime"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node-js-runtime"}},[e._v("#")]),e._v(" Node.js Runtime")]),e._v(" "),_("ol",[_("li",[e._v("(/bin/main.js)收到"),_("code",[e._v("submit")]),e._v("事件响应的数据，将数据移交"),_("code",[e._v("submitControl")]),e._v("模块，判断提交合法性并解包数据，存储至数据库中")]),e._v(" "),_("li",[e._v("等待模块返回完成信号，建立socket连接与solution_id的映射，将判题任务移交到判题机")]),e._v(" "),_("li",[e._v("判题机维护判题队列。\n"),_("ul",[_("li",[e._v("若队列空闲则直接唤起空闲判题机移交判题任务")]),e._v(" "),_("li",[e._v("若队列非空，则赋予高优先权移交队列，等待判题机结束后询问队列，入队判题")])])]),e._v(" "),_("li",[e._v("通过WebSocket模块接收来自判题机的判题信息，通过查阅solution_id对应的socket连接，将数据转发给对应socket")]),e._v(" "),_("li",[e._v("WebSocket模块通过检测完成信号，释放相关资源")]),e._v(" "),_("li",[e._v("判题机判题结束，检查队列任务，若队列非空，则获取队列头的任务进行判题，若队列为空，则判题机入空闲队列")])]),e._v(" "),_("h4",{attrs:{id:"c-judger-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#c-judger-2"}},[e._v("#")]),e._v(" C++ Judger")]),e._v(" "),_("ol",[_("li",[_("p",[e._v("被Node.js Runtime唤醒，建立简易沙箱环境，"),_("s",[e._v("获取MySQL连接")]),e._v("目前开启"),_("code",[e._v("-no-mysql")]),e._v("模式，会变为使用Node.js通过WebSocket传送数据至后端")])]),e._v(" "),_("li",[_("p",[e._v("初始化系统调用，载入数据文件")])]),e._v(" "),_("li",[_("p",[e._v("判断提交类型")]),e._v(" "),_("ul",[_("li",[e._v("测试运行：不进行答案比对，直接返回评测数据，程序结束")]),e._v(" "),_("li",[e._v("正常提交：根据题目内容进行评测，根据数据库取出的数据决定判题方法为"),_("code",[e._v("文本对比")]),e._v("或"),_("code",[e._v("Special Judge")]),e._v(" "),_("ul",[_("li",[e._v("文本对比：对比标准输出与用户输出的内容，返回"),_("code",[e._v("Wrong Answer")]),e._v("/"),_("code",[e._v("Presentation Error")]),e._v("/"),_("code",[e._v("Accept")]),e._v("信息")]),e._v(" "),_("li",[e._v("Special Judge: 将输入文件、输出文件、用户输出、用户代码传入程序，根据程序退出时返回的值决定判题结果。理论上可以返回所有的判题结果。")])])])])]),e._v(" "),_("li",[_("p",[e._v("数据保存，更新用户数据与题目数据")])]),e._v(" "),_("li",[_("p",[e._v("退出程序")])])]),e._v(" "),_("h2",{attrs:{id:"php与node-js之间如何共享用户数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#php与node-js之间如何共享用户数据"}},[e._v("#")]),e._v(" PHP与Node.js之间如何共享用户数据")]),e._v(" "),_("p",[e._v("在每次访问PHP页面时，"),_("code",[e._v("/include/db_info.inc.php")]),e._v("文件作为所有PHP文件的头文件被引入到PHP文件中，该文件包括了数据库相关的函数初始化以及缓存数据库的初始化。同时该文件会生成一个和用户"),_("code",[e._v("user_id")]),e._v("相关的"),_("code",[e._v("token")]),e._v(",并将"),_("code",[e._v("token")]),e._v("和"),_("code",[e._v("user_id")]),e._v("一同保存在cookie中，在页面进行XHR时cookie会一同发送到Node.js运行时环境")]),e._v(" "),_("p",[e._v("若访问的是Vue单页应用(即当前生效的页面),"),_("code",[e._v("generate_token")]),e._v("中间件会在"),_("code",[e._v("cookie")]),e._v("中添加一个"),_("code",[e._v("newToken")]),e._v("及"),_("code",[e._v("user_id")]),e._v("字段，并通过Redis为List: ${user_id}newToken添加一个新的token,PHP页面通过"),_("code",[e._v("/include/db_info.inc.php")]),e._v("进行登录鉴权。")]),e._v(" "),_("h2",{attrs:{id:"configmanager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#configmanager"}},[e._v("#")]),e._v(" ConfigManager")]),e._v(" "),_("p",[e._v("ConfigManager是一个系统参数及开关状态的统一管理模块，通过设置存储模块和日志模块进行可持久化及日志回滚操作。")]),e._v(" "),_("p",[e._v("模块支持使用"),_("strong",[e._v("MySQL")]),e._v("及"),_("strong",[e._v("Redis")]),e._v("进行持久化。")]),e._v(" "),_("p",[e._v("该模块目前在后端用于灰度发布及动态配置管理。")]),e._v(" "),_("h3",{attrs:{id:"config"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[e._v("#")]),e._v(" Config")]),e._v(" "),_("p",[e._v("Config是一个运行时根据管理员设置动态改变的key-value配置。开发者可以在任何需要动态配置的地方插入"),_("code",[e._v("ConfigManager.getConfig(key)")]),e._v("获得Config数据。需要注意的是"),_("code",[e._v("key")]),e._v("值是唯一的，"),_("code",[e._v("Config")]),e._v("表不能有重复key值存在。")]),e._v(" "),_("h3",{attrs:{id:"switch"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[e._v("#")]),e._v(" Switch")]),e._v(" "),_("p",[e._v("Switch是一个运行时根据管理员设置的动态改变的开关。开关的值为"),_("span",{staticClass:"katex"},[_("span",{staticClass:"katex-mathml"},[_("math",[_("semantics",[_("mrow",[_("mo",{attrs:{stretchy:"false"}},[e._v("[")]),_("mn",[e._v("0")]),_("mo",{attrs:{separator:"true"}},[e._v(",")]),_("mn",[e._v("100")]),_("mo",{attrs:{stretchy:"false"}},[e._v("]")])],1),_("annotation",{attrs:{encoding:"application/x-tex"}},[e._v("[0,100]")])],1)],1)],1),_("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[_("span",{staticClass:"base"},[_("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),_("span",{staticClass:"mopen"},[e._v("[")]),_("span",{staticClass:"mord"},[e._v("0")]),_("span",{staticClass:"mpunct"},[e._v(",")]),_("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),_("span",{staticClass:"mord"},[e._v("1")]),_("span",{staticClass:"mord"},[e._v("0")]),_("span",{staticClass:"mord"},[e._v("0")]),_("span",{staticClass:"mclose"},[e._v("]")])])])]),e._v(",其中开关值代表开关打开的概率。不难发现，0代表开关关闭，100代表开关打开，而中间态代表开关有一定概率是打开状态，而概率为"),_("span",{staticClass:"katex"},[_("span",{staticClass:"katex-mathml"},[_("math",[_("semantics",[_("mrow",[_("mi",[e._v("n")])],1),_("annotation",{attrs:{encoding:"application/x-tex"}},[e._v("n")])],1)],1)],1),_("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[_("span",{staticClass:"base"},[_("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),_("span",{staticClass:"mord mathdefault"},[e._v("n")])])])]),e._v("%。在每次调用"),_("code",[e._v("ConfigManager.isSwitchedOn(key)")]),e._v("的时候，系统会随机生成一个"),_("span",{staticClass:"katex"},[_("span",{staticClass:"katex-mathml"},[_("math",[_("semantics",[_("mrow",[_("mo",{attrs:{stretchy:"false"}},[e._v("[")]),_("mn",[e._v("0")]),_("mo",{attrs:{separator:"true"}},[e._v(",")]),_("mn",[e._v("100")]),_("mo",{attrs:{stretchy:"false"}},[e._v("]")])],1),_("annotation",{attrs:{encoding:"application/x-tex"}},[e._v("[0,100]")])],1)],1)],1),_("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[_("span",{staticClass:"base"},[_("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),_("span",{staticClass:"mopen"},[e._v("[")]),_("span",{staticClass:"mord"},[e._v("0")]),_("span",{staticClass:"mpunct"},[e._v(",")]),_("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),_("span",{staticClass:"mord"},[e._v("1")]),_("span",{staticClass:"mord"},[e._v("0")]),_("span",{staticClass:"mord"},[e._v("0")]),_("span",{staticClass:"mclose"},[e._v("]")])])])]),e._v("的数与设置的数进行大小对比以获得开关状态。\n显然，Switch是一种特殊的Config。")]),e._v(" "),_("p",[_("strong",[e._v("ConfigManager在系统中是一个单例模块")])]),e._v(" "),_("h2",{attrs:{id:"node-js-router开发"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node-js-router开发"}},[e._v("#")]),e._v(" Node.js Router开发")]),e._v(" "),_("p",[e._v("要使前端能够调用接口，访问数据，就需要开发对应的Router响应时间。所有的Router文件均放置于文件夹"),_("code",[e._v("/router")]),e._v("下。编写Router的方式与Express.js官网的模板相似，只需导出数组")]),e._v(" "),_("div",{staticClass:"language-javascript line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[e._v("module"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"router_path"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" middleware"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Router"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("就能够被app.js自动在启动时载入。")]),e._v(" "),_("h3",{attrs:{id:"interceptor"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#interceptor"}},[e._v("#")]),e._v(" Interceptor")]),e._v(" "),_("p",[e._v("对于部分需要根据后台配置管理的路由，可以在暴露的数组中添加"),_("code",[e._v("Interceptor")]),e._v("中间件，从"),_("code",[e._v("/module/interceptor/middleware.js")]),e._v("中通过"),_("code",[e._v("InterceptorFactory")]),e._v("配置"),_("code",[e._v("validator")]),e._v(",使用"),_("code",[e._v("getInterceptorInstance")]),e._v("获得拦截器实例放入路由出参middleware中即可。")]),e._v(" "),_("p",[_("code",[e._v("validator")]),e._v(": boolean Function(req, res), 传入"),_("code",[e._v("request")]),e._v("，"),_("code",[e._v("response")]),e._v("对象，根据返回值决定是否调用"),_("code",[e._v("next()")]),e._v("执行下一个中间件。")]),e._v(" "),_("p",[e._v("可以配合"),_("code",[e._v("ConfigManager")]),e._v("中的"),_("code",[e._v("switch")]),e._v("及"),_("code",[e._v("config")]),e._v("进行动态更改开闭状态。")]),e._v(" "),_("h2",{attrs:{id:"node-js-module开发"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node-js-module开发"}},[e._v("#")]),e._v(" Node.js Module开发")]),e._v(" "),_("p",[e._v("所有的后台功能若是能够抽象的，应该开发成"),_("code",[e._v("Module")]),e._v("以供使用。开发的Module存放在"),_("code",[e._v("/module")]),e._v("文件夹下即可")]),e._v(" "),_("h2",{attrs:{id:"node-js-socket-io开发"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node-js-socket-io开发"}},[e._v("#")]),e._v(" Node.js Socket.IO开发")]),e._v(" "),_("p",[e._v("该模块是后台程序诞生的原因"),_("s",[e._v("显示在线人数")]),e._v(",因此这里的代码是所有代码中历史最久远的部分。目前还没有整理方便置入中间件或绑定响应时间的接口。请等待版本更新。")]),e._v(" "),_("h2",{attrs:{id:"前端开发"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端开发"}},[e._v("#")]),e._v(" 前端开发")]),e._v(" "),_("p",[e._v("前端是本系统中一个非常重要的部分。考虑到服务器本身对CPU的依赖，于是所有的非保密数据的运算均由客户端(即用户浏览器)运算得出。")]),e._v(" "),_("p",[e._v("本平台界面采用Semantic UI进行构建，因此能够支持"),_("s",[e._v("Semantic UI")]),e._v("Fomantic UI最新文档下的所有模块及特效。")]),e._v(" "),_("p",[e._v("大多数的页面由最新版本的Vue.js驱动。由于"),_("code",[e._v("去PHP计划")]),e._v("还没有全面完成，部分页面仍将使用旧版的PHP模块驱动。\n目前还使用PHP模块驱动的页面有(此处不考虑CUP Virtual Judge):")]),e._v(" "),_("ul",[_("li",[_("s",[e._v("竞赛及作业")])]),e._v(" "),_("li",[_("s",[e._v("管理员后台")])]),e._v(" "),_("li",[_("s",[e._v("编译错误页面")])]),e._v(" "),_("li",[_("s",[e._v("运行错误页面")])]),e._v(" "),_("li",[e._v("注册页面*")])]),e._v(" "),_("p",[e._v("删除在"),_("code",[e._v("3.0.0-alpha")]),e._v("版本中已重构的部分\n*: 正在重构中")]),e._v(" "),_("p",[e._v("以上的页面将在不久的将来被Vue页面替代，因此在这些页面上进行功能增删需要三思。")]),e._v(" "),_("p",[e._v("当前所有的前端请求均通过"),_("strong",[e._v("AJAX")]),e._v("与后端保持通信，"),_("s",[e._v("考虑到Semantic UI仍然基于jQuery进行开发，为了减少过多第三方库的引入，建议直接使用jQuery的接口进行XHR请求")]),e._v("请直接在"),_("code",[e._v("CUP-Online-Judge-NG-Frontend")]),e._v("中使用"),_("code",[e._v("this.axios")]),e._v("进行AJAX操作。")]),e._v(" "),_("p",[e._v("有少数的功能不能够使用AJAX通信，而必须使用Socket.IO接口与后端通信。")]),e._v(" "),_("ul",[_("li",[e._v("历史页面最新提交的更新")]),e._v(" "),_("li",[e._v("题目提交页面评测题目")]),e._v(" "),_("li",[e._v("黑板")]),e._v(" "),_("li",[e._v("全局信息推送")]),e._v(" "),_("li",[e._v("建立WebSocket时提交的环境数据")]),e._v(" "),_("li",[e._v("在线用户情况")]),e._v(" "),_("li",[e._v("评测队列")])]),e._v(" "),_("h2",{attrs:{id:"git"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[e._v("#")]),e._v(" Git")]),e._v(" "),_("h3",{attrs:{id:"版本"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[e._v("#")]),e._v(" 版本")]),e._v(" "),_("p",[e._v("开发版本格式为："),_("code",[e._v("${major-version}.${maintain-version}.${bugfix-version/refactor-version/hotfix-version}[optional: ${alpha|beta|ppe}]")])]),e._v(" "),_("h4",{attrs:{id:"如何针对代码的改变选择适合的版本号变化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何针对代码的改变选择适合的版本号变化"}},[e._v("#")]),e._v(" 如何针对代码的改变选择适合的版本号变化")]),e._v(" "),_("p",[e._v("当出现以下变化的，大版本增加:")]),e._v(" "),_("ul",[_("li",[e._v("核心代码完全重构")]),e._v(" "),_("li",[e._v("环境更改")])]),e._v(" "),_("p",[e._v("当出现以下变化的，小版本增加:")]),e._v(" "),_("ul",[_("li",[e._v("增加前/后端模块链")]),e._v(" "),_("li",[e._v("修改前/后端模块链")]),e._v(" "),_("li",[e._v("新增/修改Plugin")]),e._v(" "),_("li",[e._v("新增非重要功能")]),e._v(" "),_("li",[e._v("删除模块/UI更改")])]),e._v(" "),_("p",[e._v("当出现以下变化时，修复版本增加:")]),e._v(" "),_("ul",[_("li",[e._v("修复Bugs")]),e._v(" "),_("li",[e._v("更新依赖")]),e._v(" "),_("li",[e._v("更正typo")]),e._v(" "),_("li",[e._v("新增/修改测试用例")]),e._v(" "),_("li",[e._v("无感知的功能重构")])]),e._v(" "),_("h2",{attrs:{id:"发布"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[e._v("#")]),e._v(" 发布")]),e._v(" "),_("p",[_("strong",[e._v("非线上紧急修复问题，一律禁止在高峰期进行任何发布")])]),e._v(" "),_("h3",{attrs:{id:"后端发布"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#后端发布"}},[e._v("#")]),e._v(" 后端发布")]),e._v(" "),_("h4",{attrs:{id:"websocket发布"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#websocket发布"}},[e._v("#")]),e._v(" WebSocket发布")]),e._v(" "),_("p",[e._v("该服务为单例应用，重启过程没有任何安全措施。请尽可能于低峰期发布。\n未来将考虑接入主Cluster节点。")]),e._v(" "),_("h4",{attrs:{id:"功能发布"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#功能发布"}},[e._v("#")]),e._v(" 功能发布")]),e._v(" "),_("p",[e._v("该服务涉及除判题机及在线用户以外的所有服务，目前可采用安全的在线热部署进行重启。")]),e._v(" "),_("p",[e._v("热部署触发链接:"),_("RouterLink",{attrs:{to:"/api/admin/system/hot-reload/"}},[e._v("Hot-Reload")])],1),e._v(" "),_("p",[e._v("管理员通过以下链接Notify主进程进行重启作业。重启失败时，现有Worker将不会被替代。")]),e._v(" "),_("p",[e._v("同理，主进程相关逻辑为单例应用，重启过程有一定的安全措施，但也请务必在低峰期更改。")]),e._v(" "),_("p",[e._v("Master重启流程")]),e._v(" "),_("mermaid",[e._v("\ngraph TD\nA[Worker] --Notify--\x3e B[Master]\nB --Fork--\x3e C[new Worker]\nC --\x3e D{isAlive?}\nD --N--\x3eE[End]\nD --Y--\x3e F[Fork new workers]\nF --\x3e G[Update worker queue]\nG --\x3e E\n")])],1)}),[],!1,null,null,null);t.default=a.exports}}]);